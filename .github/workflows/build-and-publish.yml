name: Build

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Maven-Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Sourcecode
        uses: actions/checkout@v3.0.0

      - name: Set up Java 17
        uses: actions/setup-java@v3.1.1
        with:
          distribution: temurin
          java-version: 17
          architecture: x64
          cache: 'maven'

      - name: Set up Maven Settings
        uses: whelk-io/maven-settings-xml-action@v21
        with:
          servers: >
            [
              {
                "id": "github",
                "username": "${{ secrets.GH_PACKAGES_USERNAME }}",
                "password": "${{ secrets.GH_PACKAGES_TOKEN }}"
              }
            ]
          output_file: .m2/settings.xml

      - name: Cache build files
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-maven-${{ hashFiles('**/target') }}
          path: target

      - name: Build with Maven
        run: mvn -T 1C deploy

      - name: Upload built JAR
        uses: actions/upload-artifact@v3
        with:
          name: spring-entity-interface-repositories.jar
          path: target/spring-entity-interface-repositories.jar
          if-no-files-found: error

  release:
    name: Create Release
    needs: build
    # only create release on tag push and no pre-release identifiers in the tag name
    if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref_name, 'alpha') && !contains(github.ref_name, 'beta') && !contains(github.ref_name, 'rc')
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: spring-entity-interface-repositories.jar

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: spring-entity-interface-repositories.jar
          automatic_release_tag: latest
          title: ${{ github.event.repository.name }} ${{ github.ref_name }}

  pre-release:
    name: Create Pre-Release
    needs: build
    # only create pre-release on tag push and pre-release identifiers in the tag name
    if: startsWith(github.ref, 'refs/tags/v') && (contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc'))
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: spring-entity-interface-repositories.jar

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: true
          files: spring-entity-interface-repositories.jar
          title: ${{ github.event.repository.name }} ${{ github.ref_name }}